extends layout

block vars
  - var thisPage = 'gettingstarted'

block content

  .jumbotron(style='background: url("images/header-3-500.jpg"); background-size:cover;')
    .container(style='padding-top: 70px').feature-container
      h1 Getting Started

      p Try out the API Portal in the following simple steps.
  .container

    br

    h2 Introduction

    .row
      .col-md-8
        .panel.panel-success
          .panel-heading
            h4.panel-title Wicked Beta Release
          .panel-body
            p.
              <span style="color:#a00"><b>IMPORTANT:</b> Currently, this page will install the latest released version of wicked (0.12.5).
              If you want to try the latest Beta release (<b>recommended</b>, wicked 1.0.0 is in a quite stable state already),
              please go to this page: 
              <a href="https://github.com/Haufe-Lexware/wicked.haufe.io/blob/wicked_1_0/doc/BETA.md" target="_blank">How
              to install a beta version of wicked.haufe.io</a>.</span>

        br
        br

        p.
          This page contains the instructions to run a demo portal on a single docker host; to see this for
          Kubernetes, please see the <a href="gettingstarted-k8s.html"><b>Getting Started With Kubernetes</b></a> guide.
        p.
          This introduction to the API Portal we provide will guide you to deploy an API Portal
          like the one we keep for demo purposes at 
          <a href='https://wicked-demo.haufe.io' target='_blank'>wicked-demo.haufe.io</a>.
        p.
          The wicked API Portal is designed to run within <a href='http://docker.io' target='_blank'><code>docker</code></a>.
          While it would  be perfectly possible to run the API Portal without docker, we at Haufe firmly believe
          that it is not worth the effort. We have designed a deployment you can just use off the shelf,
          including guidelines on how to 

        ul
          li Deploy
          li Update
          li and Operate
        p.
          your API Portal and the API Gateway (<a href='https://getkong.org' target='_blank'>Mashape Kong</a>) which is used to proxy the APIs.
        p.
          The following steps assume that you are familiar in using a <code>bash</code> type shell, and that you
          have a running <code>git</code> installation. On Linux/Mac OS X this should be present out of the box (if
          you are a developer). On Windows, using either the Ubuntu bash Windows subsystem, or plain "Git bash" (cygwin)
          should work fine.
        p.
          <b>Note:</b> The following guide is not suitable as a starting point for your own configuration, but is rather
          meant as a demo configuration. The documentation contains more information on how to get you started with your
          own APIs.
        p &nbsp;

      .col-md-4
        a(href='https://docker.com' target='_blank')
          img(src='images/moby_large.png' width='250').center-block


  .grey
    .container.pad20
      .row
        .col-md-4
          | &nbsp;
        .col-md-8
          h2 Step 1: Prerequisites - Docker
          
      .row
        .col-md-4
          a(href='https://www.docker.com/products/docker-compose' target='_blank')
            img(src='https://raw.githubusercontent.com/docker/compose/master/logo.png' style='width:200px;').center-block

        .col-md-8
          p.
            The only prerequisites for this getting started guide is that you have access to a the docker command
            line and a Docker host. If you haven't already installed Docker, go ahead and
            <a href='https://docker.com' target='_blank'>do that first</a>.
            It will work both on Windows and Mac OS X machines without problems, best using docker 1.12 or later.

          p.
            The API Portal will - for evaluation purposes - happily run on your local machine, or on any docker
            host which you have set up <code>docker-machine</code> to talk to. Make sure you are using version
            greater than or equal to 1.12 (compose 1.8.0) when deploying the API Portal, as we are using features of Docker which
            are not available before that. Also make sure you have a recent 
            <a href='https://www.docker.com/products/docker-compose' target='_blank'><code>docker-compose</code></a>
            installed; if you haven't, click the link above and get it before proceeding. If you are using the
            Docker &geq;1.12 for Mac OS X or Windows, <code>docker-compose</code> will already be installed on your machine.

          a(href='https://docker.com' target='_blank').btn.btn-primary.btn-lg Get Docker &raquo;

          br
          br

  .white.pad20
    .container    
      h2 Step 2: Clone the Sample Deployment Repository

      .row
        .col-md-8
          p.
            Deploying the API Portal is equivalent to running a <code>docker-compose.yml</code> file. Get a sample
            configuration repository from the Haufe-Lexware Github Repository: 

          pre.
            $ git clone https://github.com/Haufe-Lexware/wicked.deploy.sample
            ...
            $ cd wicked.deploy.sample

          p.
            Make sure you have a docker host at hand you can deploy to. If you have just installed docker on
            your local machine, this will be the case, and you just have to call either the "Docker Quickstart Terminal"
            or - with more recent installations - simply the Terminal. Check that everything works:

          pre.
            $ docker --version
            Docker version 1.12.0, build 8eab29e
            $ docker-compose --version
            docker-compose version 1.8.0, build f3628c7
            $
          
          p &nbsp;
        .col-md-4
          a(href='https://github.com/Haufe-Lexware/wicked.deploy.sample' target='_blank')
            img(src='https://assets-cdn.github.com/images/modules/logos_page/Octocat.png' style='width:250px;').center-block
       
  .grey.pad20
    .container
      .row
        .col-md-4
          p &nbsp;
        .col-md-8
          h2 Step 3: Create <code>/etc/hosts</code> entries

      .row
        .col-md-4
          p &nbsp;
        .col-md-8
          p.
            Open up your <code>/etc/hosts</code> (Linux/Mac OS X, on Windows: <code>C:\Windows\System32\drivers\etc\hosts</code>) 
            file in an editor (this step will be different on Linux, Mac OS X and
            Windows, please google if unclear) and add the following two lines:

          pre.
            127.0.0.1   portal.local
            127.0.0.1   api.portal.local
          
          p.
            <b>Note:</b> You may need to <code>sudo</code> to change that file; on Windows you will need
            to edit the <code>hosts</code> file as Administrator. Check that you can ping your machine using
            both DNS names:

          pre.
            $ ping portal.local
            PING portal.local (127.0.0.1): 56 data bytes
            64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.098 ms
            ...
            $ ping api.portal.local
            PING api.portal.local (127.0.0.1): 56 data bytes
            64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.098 ms
            ...

          p &nbsp;

  .white.pad20
    .container
      .row
        .col-md-8
          h2 Step 4: Deploy
          p.
            We are now almost set to deploy the API Portal. We just have to define some environment variables and
            call <code>docker-compose</code>.
          pre.
            $ source ./env.sh
            $ docker-compose up -d
            ...

          p.
            This will take a little while, mostly because docker has to download the container images used for the portal.
            Depending on your internet connection speed, you can expect this to take from two to ten minutes (the images
            are around 1.5 GB in size in total).

          p &nbsp;

  .grey.pad20
    .container
      .row
        .col-md-4
          | &nbsp;
        .col-md-8
          h2 Step 5: Log in

      .row
        .col-md-4
          img(src='images/logo-s-500.png' style='height:350px').center-block
        .col-md-8
          p.
            Navigate to your API Portal at <a href='https://portal.local' target='_blank'><code>https://portal.local</code></a>
            and start playing around. The sample configuration has a preconfigured admin user with the following credentials:
          ul
            li <strong>User email:</strong> <code>admin@foo.com</code>
            li <strong>Password:</strong> <code>wicked</code>

          p &nbsp;

          .panel.panel-default
            .panel-heading
              | Screenshot
            .panel-body(style='text-align:center')
              img(src='images/screenshot-640.png').img-responsive

          p.
            Read more in the <a href="https://github.com/Haufe-Lexware/wicked.haufe.io" target="_blank">documentation</a>, e.g.
            on how to <a href="https://github.com/Haufe-Lexware/wicked.haufe.io/blob/master/doc/using-the-sample-portal.md">use
            the sample portal</a>.
          
          p.
            To stop and deallocate the local API Portal, issue the following command:
          pre.
            $ docker-compose down
