extends layout

block vars
  - var thisPage = 'deployment'

block content
  .jumbotron(style='background: url("images/header-4-500.jpg"); background-size:cover;')
    .container(style='padding-top: 70px').feature-container
      h1 Deployment

      p Deployment Architecture of the wicked API Portal

  .container
    .row
      .col-md-6.pad20
        h3 Deployment Architecture

        p.
          The API Portal relies on proven technology to manage traffic: The actual portal
          either sits behind a HAproxy, or leverages standard Ingress Controllers (on Kubernetes) 
          and the actual API traffic is proxied by the excellent
          <a href="https://getkong.org" target="_blank">API Gateway Kong by Mashape</a>.
        p.
          The portal components are implemented as lightweight as possible, using node.js.

        p.
          When deploying on a single docker Host, the "Kickstarter" can create suitable 
          <code>docker-compose.yml</code> files to include a HAproxy. For Kubernetes, the Helm
          chart utilizes existing Ingress Controllers.

      .col-md-6.pad20
        img(src='images/architecture-highlevel.png').center-block.img-responsive
    
  .grey
    .container.pad20
      .row
        .col-md-6.pad20
          a(href='https://www.docker.com' target='_blank')
            img(src='images/moby_large.png' style='width:300px;').center-block
        .col-md-6.pad20
          h3 Runs on any Docker Host or on Kubernetes

          p.
            The API Portal can be deployed to any environment which runs a docker host.
            This can be a single VM, or a Swarm environment. You can either deploy using
            a <code>docker-compose</code> file, or using an orchestrator like Kubernetes, 
            leveraging a <a href="https://github.com/Haufe-Lexware/wicked.haufe.io/tree/master/wicked">Kubernetes Helm Chart</a>.
          p.
            Depending on your requirements regarding high availability and your SLAs
            towards your clients, you are free to choose how to deploy the API Portal
            and Gateway.

  .container.pad20
    .row
      .col-md-6.pad20
        h3 Modular and Extensible

        p.
          Behind the scenes, the API Portal runs in several small containers, as microservices
          inside a service. It is simple to extend the portal functionality using the Portal
          API, which is also how the "Mailer", "Chatbot" and "Kong Adapter" work in the
          background.
        p.
          Scaling your API Gateway is supported out of the box, and depending on your runtime
          orchestration, setting up high availability is as well, for the Gateway (Kong), the
          Portal UI, API and Authorization Server.

        p.
          To achieve this, wicked stores all runtime configuration in a Postgres instance, and
          session and other performance-critical information in a configurable Redis instance.
      .col-md-6.pad20
        img(src='images/architecture-components.png').center-block.img-responsive
